# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR ORGANIZATION
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-04-28 08:51-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=cp1252\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"


#: formatter.py:21
msgid ""
"        Unfortunately, no additional information is available:\n"
"        the content of file '<string>' is not accessible.\n"
msgstr ""

#: formatter.py:138
msgid ""
"\n"
"    Python exception: \n"
"        {name}: {value}\n"
"\n"
"{explanation}"
msgstr ""

#: formatter.py:156 specific_info.py:35
msgid ""
"    Likely cause:\n"
"{cause}"
msgstr ""

#: formatter.py:178
msgid ""
"\n"
"    Execution stopped on line {linenumber} of file '{filename}'.\n"
"\n"
"{source}\n"
msgstr ""

#: formatter.py:186
msgid ""
"\n"
"    Exception raised on line {linenumber} of file '{filename}'.\n"
"\n"
"{source}\n"
msgstr ""

#: generic_info.py:9
msgid ""
"    ArithmeticError is the base class for those built-in exceptions\n"
"    that are raised for various arithmetic errors.\n"
"    It is unusual that you are seeing this exception;\n"
"    normally, a more specific exception should have been raised.\n"
msgstr ""

#: generic_info.py:24 specific_info.py:58 specific_info.py:79
msgid ""
"    Python could not parse the file '{filename}'\n"
"    beyond the location indicated below by --> and ^.\n"
"\n"
"{source}\n"
msgstr ""

#: generic_info.py:31
msgid ""
"    An IndentationError occurs when a given line of code is\n"
"    not indented (aligned vertically with other lines) as expected.\n"
msgstr ""

#: generic_info.py:41
msgid ""
"    A NameError exception indicates that a variable or\n"
"    function name is not known to Python.\n"
"    Most often, this is because there is a spelling mistake.\n"
"    However, sometimes it is because the name is used\n"
"    before being defined or given a value.\n"
msgstr ""

#: generic_info.py:52
msgid ""
"    A SyntaxError occurs when Python cannot understand your code.\n"
msgstr ""

#: generic_info.py:57
msgid ""
"    A TabError indicates that you have used both spaces\n"
"    and tab characters to indent your code.\n"
"    This is not allowed in Python.\n"
"    Indenting your code means to have block of codes aligned vertically\n"
"    by inserting either spaces or tab characters at the beginning of lines.\n"
"    Python's recommendation is to always use spaces to indent your code.\n"
msgstr ""

#: generic_info.py:69
msgid ""
"    In Python, variables that are used inside a function are known as \n"
"    local variables. Before they are used, they must be assigned a value.\n"
"    A variable that is used before it is assigned a value is assumed to\n"
"    be defined outside that function; it is known as a 'global'\n"
"    (or sometimes 'nonlocal') variable. You cannot assign a value to such\n"
"    a global variable inside a function without first indicating to\n"
"    Python that this is a global variable, otherwise you will see\n"
"    an UnboundLocalError.\n"
msgstr ""

#: generic_info.py:83
msgid ""
"    No information is known about this exception.\n"
msgstr ""

#: generic_info.py:88
msgid ""
"    A ZeroDivisionError occurs when you are attempting to divide\n"
"    a value by zero:\n"
"        result = my_variable / 0\n"
"    It can also happen if you calculate the remainder of a division\n"
"    using the modulo operator '%'\n"
"        result = my_variable % 0"
msgstr ""

#: specific_info.py:19
msgid ""
"        In this case, the line identified above\n"
"        is more indented than expected and \n"
"        does not match the indentation of the previous line.\n"
msgstr ""

#: specific_info.py:25
msgid ""
"        In this case, the line identified above\n"
"        was expected to begin a new indented block.\n"
msgstr ""

#: specific_info.py:30
msgid ""
"        In this case, the line identified above is\n"
"        less indented than the preceding one,\n"
"        and is not aligned vertically with another block of code.\n"
msgstr ""

#: specific_info.py:45
msgid ""
"        In your program, the unknown name is '{var_name}'.\n"
msgstr ""

#: specific_info.py:94
msgid ""
"        The variable that appears to cause the problem is '{var_name}'.\n"
"        Try inserting the statement\n"
"            global {var_name}\n"
"        as the first line inside your function."
msgstr ""

#: specific_info.py:120
msgid ""
"    My best guess: you were trying\n"
"    to assign a value to a Python keyword.\n"
"    This is not allowed.\n"
"\n"
msgstr ""

#: specific_info.py:128
msgid ""
"    My best guess: you wrote something like\n"
"        import X from Y\n"
"    instead of\n"
"        from Y import X\n"
"\n"
msgstr ""

#: specific_info.py:138
msgid ""
"    My best guess: you meant to use Python's 'elif' keyword\n"
"    but wrote '{name}' instead\n"
"\n"
msgstr ""

#: specific_info.py:147
msgid "a class"
msgstr ""

#: specific_info.py:148
msgid ""
"    My best guess: you wanted to define {class_}\n"
"    but forgot to add a colon ':' at the end\n"
"\n"
msgstr ""

#: specific_info.py:154
msgid ""
"    My best guess: you wrote a '{name}' loop but\n"
"    forgot to add a colon ':' at the end\n"
"\n"
msgstr ""

#: specific_info.py:160
msgid ""
"    My best guess: you wrote a statement beginning with\n"
"    '{name}' but forgot to add a colon ':' at the end\n"
"\n"
msgstr ""

#: specific_info.py:167
msgid "a function or method"
msgstr ""

#: specific_info.py:168
msgid ""
"    My best guess: you tried to define {class_or_function}\n"
"    and did not use the correct syntax.\n"
"    The correct syntax is:\n"
"        def name ( optional_arguments ):\n"
msgstr ""

#: specific_info.py:178
msgid ""
"    My best guess: you wrote an expression like\n"
"        {name} = something\n"
"    where <{name}>, on the left hand-side of the equal sign, is\n"
"    an actual number or string (what Python calls a 'literal'),\n"
"    and not the name of a variable.  Perhaps you meant to write:\n"
"        something = {name}\n"
"\n"
msgstr ""

#: specific_info.py:188
msgid ""
"    Currently, we cannot guess the likely cause of this error.\n"
"\n"
"    Try to examine closely the line indicated as well as the line\n"
"    immediately above to see if you can identify some misspelled\n"
"    word, or missing symbols, like (, ), [, ], :, etc.\n"
"\n"
msgstr ""

